<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/tx 
		http://www.springframework.org/schema/tx/spring-tx.xsd
		http://www.springframework.org/schema/aop
		http://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc.xsd">

	<mvc:annotation-driven validator="validator">
		<mvc:message-converters register-defaults="true">
			<!-- @ResponseBody乱码问题，将StringHttpMessageConverter的默认编码设为UTF-8 -->
			<bean class="org.springframework.http.converter.StringHttpMessageConverter">
				<constructor-arg value="UTF-8" />
			</bean>
			<!-- 避免IE执行AJAX时,返回JSON出现下载文件 -->
			<bean id="fastJsonHttpMessageConverter"
				class="com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter">
				<property name="supportedMediaTypes">
					<list>
						<value>text/html;charset=UTF-8</value>
						<value>application/json</value>
					</list>
				</property>
				<property name="features">
					<list>
						<value>WriteMapNullValue</value>
						<value>QuoteFieldNames</value>
						<value>WriteDateUseDateFormat</value>
						<value>WriteEnumUsingToString</value>
					</list>
				</property>
				<property name="dateFormat" value="yyyy-MM-dd HH:mm:ss" />
			</bean>
		</mvc:message-converters>
	</mvc:annotation-driven>
	<context:component-scan base-package="com.jecp"
		use-default-filters="false">
		<context:include-filter type="annotation"
			expression="org.springframework.stereotype.Controller" />
	</context:component-scan>
    <!-- 需要增加以下静态资源过滤，否则采用通配符的方式增加拦截器仍然会被拦截器拦截 -->
	<mvc:resources mapping="/js/**" location="/js/" />
	<mvc:resources mapping="/js_mobile/**" location="/js_mobile/" />
	<mvc:resources mapping="/images/**" location="/images/" />
	<mvc:resources mapping="/css/**" location="/css/" />
	<mvc:resources mapping="/themes/**" location="/themes/" />
	<mvc:resources mapping="/upload/**" location="/upload/" />
	<mvc:resources mapping="/*.html" location="/" />
	<mvc:resources mapping="/m/**/*.html" location="/WEB-INF/mpages/" />
	<mvc:resources mapping="/**/*.html" location="/WEB-INF/pages/" />
	<!--配置拦截器, 多个拦截器,顺序执行 -->
	<mvc:interceptors>
		<mvc:interceptor>
			<!-- 匹配的是url路径， 如果不配置或/**,将拦截所有的Controller -->
			<mvc:mapping path="/**" />
			<mvc:exclude-mapping path="/js/**" />
			<mvc:exclude-mapping path="/js_mobile/**" />
			<mvc:exclude-mapping path="/images/**" />
			<mvc:exclude-mapping path="/css/**" />
			<mvc:exclude-mapping path="/themes/**" />
			<mvc:exclude-mapping path="/upload/**" />
			<mvc:exclude-mapping path="/**/*.html" />
			<mvc:exclude-mapping path="/userlogin" />
			<mvc:exclude-mapping path="/userauth" />
			<mvc:exclude-mapping path="/usertree" />
			<mvc:exclude-mapping path="/usubroletree" />
			<mvc:exclude-mapping path="/dictgetToJson" />
			<mvc:exclude-mapping path="/depttree" />


			<bean class="com.jecp.sysmanage.interceptor.AuthInterceptor"></bean>
		</mvc:interceptor>
		<!-- 当设置多个拦截器时，先按顺序调用preHandle方法，然后逆序调用每个拦截器的postHandle和afterCompletion方法 -->
	</mvc:interceptors>
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/jsp/" />
		<property name="suffix" value=".jsp" />
	</bean>

</beans>