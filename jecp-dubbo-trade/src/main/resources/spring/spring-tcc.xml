<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd 
       http://www.springframework.org/schema/context 
       http://www.springframework.org/schema/context/spring-context.xsd 
       http://www.springframework.org/schema/util 
       http://www.springframework.org/schema/util/spring-util.xsd">

	<!-- TCC Transaction配置 -->
	<bean id="tccDataSource" class="com.alibaba.druid.pool.DruidDataSource"
		init-method="init" destroy-method="close">
		<property name="url" value="${tcc.dataSource.url}" />
		<property name="username" value="${tcc.dataSource.username}" />
		<property name="password" value="${tcc.dataSource.password}" />		
		<property name="initialSize" value="${tcc.dataSource.initialSize}" />
		<property name="minIdle" value="${tcc.dataSource.minIdle}" />
		<property name="maxActive" value="${tcc.dataSource.maxActive}" />		
		<property name="maxWait" value="${tcc.dataSource.maxWait}" />
		<!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
		<property name="timeBetweenEvictionRunsMillis" value="${tcc.dataSource.timeBetweenEvictionRunsMillis}" />
		<!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
		<property name="minEvictableIdleTimeMillis" value="${tcc.dataSource.minEvictableIdleTimeMillis}" />
		<property name="validationQuery" value="${tcc.dataSource.validationQuery}" />
		<property name="testWhileIdle" value="${tcc.dataSource.testWhileIdle}" />
		<property name="testOnBorrow" value="${tcc.dataSource.testOnBorrow}" />
		<property name="testOnReturn" value="${tcc.dataSource.testOnReturn}" />
		<!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->
		<property name="poolPreparedStatements" value="${tcc.dataSource.poolPreparedStatements}" />
		<property name="maxPoolPreparedStatementPerConnectionSize"
			value="${tcc.dataSource.maxPoolPreparedStatementPerConnectionSize}" />
		<!-- 配置监控统计拦截的filters -->
		<property name="filters" value="${tcc.dataSource.filters}" />
	</bean>
	<bean class="org.mengyun.tcctransaction.spring.recover.DefaultRecoverConfig">
		<!-- maxRetryCount表示一个事务最多尝试恢复次数，超过将不在自动恢复，需要人工干预，默认是30次 -->
        <property name="maxRetryCount" value="30"/>
        <!-- recoverDuration表示一个事务日志当超过一定时间间隔后没有更新就会被认为是发生了异常，需要恢复，
            恢复Job将扫描超过这个时间间隔依旧没有更新的事务日志，并对这些事务进行恢复，时间单位是秒，默认是60秒 -->
        <property name="recoverDuration" value="60"/>
        <!-- cronExpression表示恢复Job触发间隔配置，默认是(每分钟)0 */1 * * * ? -->
        <property name="cronExpression" value="0/30 * * * * ?"/>
        <property name="delayCancelExceptions">
            <util:set>
                <value>com.alibaba.dubbo.remoting.TimeoutException</value>
            </util:set>
        </property>
    </bean>
    <bean id="transactionRepository"
          class="org.mengyun.tcctransaction.spring.repository.SpringJdbcTransactionRepository">
        <property name="dataSource" ref="tccDataSource"/>
        <property name="domain" value="TRADE"/>
        <property name="tbSuffix" value="_TRADE"/>
    </bean>
</beans>
